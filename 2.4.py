# 2.4 数字

# 2.4.1 整数
# 整型数（int）为不带小数点的数字
# 加数1<整型数> + 加数2<整型数>
# 返回两数的和
print(3 + 2)

# 被减数<整型数> - 减数<整型数>
# 返回两数的差
print(3 - 2)

# 因数1<整型数> * 因数2<整型数>
# 返回两数的积
print(2 * 3)

# 被除数<整型数> / 除数<整型数>
# 返回两数的商
print(3 / 2)

# 底数<整型数> ** 指数<整型数>
# 返回底数的指数次方
print(3**2)
print(3**3)
print(10**6)

# 优先级：()，**，*、/，+、-
# 建议不单纯依靠优先级，适当使用括号
print(2 + 3 * 4)
print((2 + 3) * 4)

# 2.4.1 浮点数
# 浮点数（float）为带小数点的数字
# 浮点数的行为与手算一致，通常无需考虑
# Python为弱类型语言，自动格式转换方便，如整型数可以自动转换为整型数
# 加数1<浮点数> + 加数2<浮点数>
# 返回两数的和
# 被减数<浮点数> - 减数<浮点数>
# 返回两数的差
# 因数1<浮点数> * 因数2<浮点数>
# 返回两数的积
# 被除数<浮点数> / 除数<浮点数>
# 返回两数的商
# 底数<浮点数> ** 指数<浮点数>
# 返回底数的指数次方
print(0.1 + 0.1)
print(2 * 0.1)
print(0.2 + 0.2)
print(0.2 * 2)

# 浮点数计算结果包含的小数位数可能不确定
print(0.2 + 0.1)
print(3 * 0.1)

# 2.4.3 使用函数str()避免类型错误
# str(
#     object=待字符串化的量<> | "": 空字符串)
# 返回一个量转换为的字符串实例
print("Happy " + str(23) + "rd Birthday!")

# 2.4.4 Python2中的整数
# python2中两整数相除结果取整数部分
# 当除数或被除数含浮点数时结果才为浮点数
